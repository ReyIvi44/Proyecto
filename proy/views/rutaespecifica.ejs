<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= ruta.features[0].properties["Nombre"] %></title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container mt-5">
    <h1 class="text-center titulorutas mb-5"><%= ruta.features[0].properties["Nombre"] %></h1>
    <% const dificultad = ruta.features[0].properties.Dificultad;
      let color;
      switch (dificultad) {
        case "Baja": color = "#00FF00"; break;
        case "Media": color = "#FFA500"; break;
        case "Alta": color = "#FF0000"; break;
        default: color = "#0000FF"; break;
      }
      %>

        <div class="row justify-content-center text-center mb-3">
            <div class="col-md-3">
                <p><strong>Parque Nacional:</strong> <%= ruta.features[0].properties["Parque Nacional"] %></p>
            </div>
            <div class="col-md-3">
                <p style="background-color: <%= color %>; padding: 6px; border-radius: 6px">
                  <strong>Dificultad:</strong> <%= ruta.features[0].properties.Dificultad %></p>
            </div>
            <div class="col-md-3">
                <p><strong>Duración:</strong> <%= ruta.features[0].properties["Duración (h)"] %> horas</p>
            </div>
        </div>
    </div>
    <div class="imagenes">
      <img src="/images/rutas/<%= ruta.name %>1.jpg" alt="Imagen 1" class = "imagen1" />
      <img src="/images/rutas/<%= ruta.name %>2.jpg" alt="Imagen 2" />
    </div>
    <div class="DescrRecom mt-5 mb-5">
    <h5 style="margin-left:80px;"><strong>Descripción:</strong></h5>
    <p style="margin-left:120px;"><%= ruta.features[0].properties.Descripción %></p>
    <h5 class="mt-5" style="margin-left:80px;"><strong>Recomendaciones:</strong></h5>
    <p style="margin-left:120px;"><%= ruta.features[0].properties.Recomendaciones %></p>
    </div>
    <div id="mapaRuta" class="mb-5" style="height: 500px; margin-top: 20px;"></div>
    <div id="comentarios">
        <h3>Comentarios</h3>
      
        <% if (user) { %>
        <form id="comentarioForm" class="comentario-form">
          <div class="campo-textarea">
            <label for="mensaje">💬 Tu comentario:</label>
            <textarea id="mensaje" required placeholder="Escribe tu comentario..."></textarea>
          </div>
          
          <button type="submit">✉️ Enviar</button>
        </form>
        <% } else { %>
          <p>🔒 Inicia sesión para escribir un comentario.</p>
        <% } %>
      
        <div id="listaComentarios"></div>
      </div>
    <script>
    // Espera a que la página cargue
    document.addEventListener("DOMContentLoaded", function () {
        const mapa = L.map("mapaRuta").setView([40.4, -3.7], 10); // Coordenadas genéricas

        // Capa base
        L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        maxZoom: 19,
        }).addTo(mapa);

        // Obtener datos de la ruta desde el backend
        const ruta = <%- JSON.stringify(ruta) %>;

        // Mostrar cada geometría en el mapa
        ruta.features.forEach(feature => {
        const geojson = L.geoJSON(feature, {
            style: function(feature) {
            // Obtener la dificultad de la ruta
            const dificultad = feature.properties.Dificultad;
            let color;

            // Asignar colores según la dificultad
            switch(dificultad) {
                case "Baja":
                    color = "#00FF00"; // Verde
                    break;
                case "Media":
                    color = "#FFA500"; // Naranja
                    break;
                case "Alta":
                    color = "#FF0000"; // Rojo
                    break;
            }

            return {
                color: color,
                weight: 3,
                opacity: 1
            };
          },
        }).addTo(mapa);

        // Ajustar la vista a la ruta
        mapa.fitBounds(geojson.getBounds());
        });
    });
    </script>
    <script>
      const rutaId = '<%= ruta._id %>';
      const usuarioActualId = '<%= user ? user._id : "" %>';

      async function cargarComentarios() {
        const res = await fetch(`/comentarios/${rutaId}`);
        const comentarios = await res.json();

        const lista = document.getElementById('listaComentarios');
        lista.innerHTML = comentarios.map(c => `
          <div class="comentario" data-id="${c._id}">
            <strong>${c.nombre || 'Anónimo'}</strong> 
            <em>${new Date(c.fecha).toLocaleString()}</em>
            <p>${c.mensaje}</p>
            ${c.usuarioId === usuarioActualId ? `<button class="btnEliminar" data-id="${c._id}">Eliminar</button>` : ''}
          </div>
        `).join('');

        document.querySelectorAll('.btnEliminar').forEach(btn => {
          btn.addEventListener('click', async e => {
            const id = e.target.dataset.id;
            if (confirm('¿Seguro que quieres eliminar este comentario?')) {
              const res = await fetch(`/comentarios/${id}`, { method: 'DELETE' });
              if (res.ok) {
                cargarComentarios();
              } else {
                const data = await res.json();
                alert(data.error || 'Error al eliminar comentario');
              }
            }
          });
        });
      }

      const formulario = document.getElementById('comentarioForm');
      if (formulario) {
        formulario.addEventListener('submit', async e => {
          e.preventDefault();
          const mensaje = document.getElementById('mensaje').value;

          const res = await fetch('/comentarios', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ rutaId, mensaje })
          });

          if (res.ok) {
            formulario.reset();
            cargarComentarios();
          } else {
            const data = await res.json();
            alert(data.error || 'Error al enviar comentario');
          }
        });
      }

      cargarComentarios();
    </script>

    <a href="/">Volver al mapa</a>

    <footer>
        <p>© 2025 Información de Rutas</p>
    </footer>
</body>
</html>